# -*- coding: utf-8 -*-
from lxml import etree

def crc16(data):
    crc = 0xFFFF
    for i in xrange(0, len(data)):
        x = (crc >> 8) ^ ord(data[i]) & 0xFF
        x ^= x >> 4
        crc = ((crc << 8) ^ (x << 12) ^ (x << 5) ^ x) & 0xFFFF;
    return crc


class Edost(object):
    addr = 'http://www.edost.ru/edost_calc_kln.php'

    crcmas = [0,44589,63642,19872,49065,30625,39840,51484,11118,1368,44448,24303,5468,7774,56506,26203,37429,51460,64227,31089,52253,19661,47817,56812,10784,12574,16497,24274,19856,1717,48850,3811,33612,8087,26120,27857,52643,29453,7445,45699,25000,12593,8027,42097,173,6429,55984,22279,5712,16232,25073,8916,28287,15592,48164,52813,7732,9443,33066,7686,55948,44418,59967,54083,58855,16119,40704,59128,54992,63168,47980,27304,3945,31733,20260,14435,37509,49790,64805,36193,11643,51790,27911,62617,20382,60718,26404,51035,20630,25672,34281,48124,26636,52894,2077,5292,30718,30838,24182,58552,59311,21183,25265,58729,38096,38365,9383,30954,20197,33224,40774,38491,61825,30911,6091,1057,46122,5772,6480,57980,55784,7558,32061,47601,43351,7294,40081,16412,46157,54719,25218,64004,41309,32063,25239,62779,6603,27086,9451,39423,38723,14462,21200,44893,47746,39693,29976,43762,25125,53112,63505,20673,31449,15126,60997,27711,30917,26138,21878,34495,25180,64885,13427,27337,10579,42901,26363,32226,25993,4464,59956,27681,61475,7637,7555,12699,32561,48305,629,18884,56296,59263,17415,21456,29085,59009,26415,15166,30668,52887,42765,4383,7730,32573,36995,24202,17815,55308,59337,64922,28253,49107,14948,7764,58747,55509,19697,1115,18773,26928,32165,47637,22556,57638,56612,17137,8859,25454,10555,15600,63591,54451,42153,62018,46436,121,39446,3434,58876,20497,29792,17717,11298,38298,35305,4101,32612,8113,34106,50351,14438,54521,13368,21882,2,38439,4055,7441,42180,34340,47267,60600,25374,30844,46056,47437,3428,57172,2195,33121,51950,20776,59083,15214,60086,56895,18129,12013,7820,57666,23216,49967,43492,57603,6783,40695,3323,33354,43758,53404,46779,37735,29178,10049,41053,30992,1156,42355,38388,64559,29771,46426,24648,41078,9135,3795,5319,35388,19155,20754,31102,1464,9983,16604,44928,25519,64976,5158,59074,27172,9347,62072,25853,26806,60574,50855,18522,20833,53807,47086,24854,38383,16225,15905,38116,41648,12522,21967,25288,18184,9592,21446,25479,14328,11563,28232,56077,19870,45763,55234,18407,27493,14168,37042,33394,5802,25957,56579,32768,55886,60563,63151,59202,52793,1159,47564,49731,7088,54403,28420,59541,39272,25347,19304,47707,18314,55759,11792,54222,33788,52990,29800,35711,52466,50371,13159,65414,27814,3674,39312,60524,54909,12206,42259,2023,12493,25640,47136,52849,21381,60749,31511,12897,60397,29617,39735,64575,65301,58394,20754,36880,38112,32555,51070,31921,99,34280,53098,42763,15681,43882,60953,4505,56775,62440,42175,25267,22320,8898,45242,61050,55725,37629,58410,49079,44910,64870,4583,56727,53026,5685,13705,12517,16332,25556,52423,26777,4126,56413,12550,14063,6443,5557,15807,19135,34493,23400,18861,41873,28032,49011,33448,37253,25704,29024,25626,10124,9775,39423,5752,33855,59146,61581,18292,12217,23589,32927,52104,55168,22390,11565,63203,59987,1200,36588,8579,11856,21862,36528,1677,8012,50006,40684,18138,12830,14671,57736,18533,45584,23424,10055,24541,42307,707,30315,36825,1042,64646,9742,3274,5391,61842,29854,59485,35677,55638,4842,56579,37108,24237,35669,58588,21516,38149,16795,49245,852,8386,59573,40295,35362,42484,17508,32037,24001,28170,24262,321,8429,63991,49033,19122,42472,17140,52184,19768,40436,19576,47790,13428,45581,58964,1521,2544,42596,35536,12755,6365,16690,52638,59985,14696,18063,8945,14621,31268,47640,57340,11330,39097,16985,38827,34033,54980,1796,2271,36726,51954,53745,19374,25320,40551,37109,45856,21631,21331,9843,9961,13857,36217,56188,47449,36990,30929,13776,20579,61686,53148,61734,62186,51571,39584,61679,242,41802,5786,41333,28588,40769,5650,3627,19008,47104,29309,28349,27006,59161,18134,49672,40214,6281,34579,60488,65333,46224,13138,21447,15909,45062,2290,27141,57124,20434,32855,40027,19849,462,49745,49677,64674,7993,41083,18876,8020,57794,3046,60803,36184,14847,51234,24728,62771,28800,36701,46449,7048,6323,14287,12922,9322,62163,27021,35267,23697,61370,9257,16025,2039,1279,18382,16532,9698,3731,51694,29984,44894,54491,8266,9537,60883,47698,28617,14419,14604,49356,42975,2988,63415,56274,53362,53057,10262,39498,32103,41866,53505,10622,34119,43587,57880,39949,56832,21610,13768,51023,22004,17210,5388,55359,54311,17207,14717,17394,26436,16136,55557,37922,38132,31473,33413,36258,18375,6871,4326,1266,17380,26756,13257,9567,25178,61645,58429,34863,25162,14350,8105,56499,12723,63557,51605,2921,19135,61754,48975,12144,45962,6528,1187,8886,42684,15947,38427,18083,18931,57591,41545,28420,32720,49257,690,36897,6127,7705,26272,24439,29910,53114,19794,60245,12315,25867,51990,42113,49561,1096,63781,36810,34021,50145,43648,64689,8100,11740,41409,33473,19426,10820,3280,62488,29649,45580,21217,4178,29565,23333,17163,29718,7638,58751,37043,41409,22630,41629,42781,32107,7005,37401,17117,27996,22070,3005,8792,20086,42638,16222,51276,26865,50419,38750,23022,12406,25809,24723,55423,19574,7367,19540,37738,22223,61885,39078,4960,16325,38612,6137,23697,54964,1048,51058,48164,32214,15644,2365,5890,22051,61097,55728,59909,32737,58614,2814,57926,23745,34059,55954,44775,49767,7785,13299,57885,29541,49293,39328,42556,58254,9487,53832,28078,31457,7329,58470,15479,18357,5189,35484,37821,61554,5910,64525,23793,11462,61681,3451,31701,52097,8667,58118,27140,61583,870,51806,47599,25582,51086,11615,62866,22547,44847,12747,29739,7705,8140,29693,6376,5191,13542,65302,46371,31753,56597,31894,28252,16072,7159,11818,25872,60433,60798,15482,45442,47015,63046,7714,5438,18436,57723,16063,43935,22923,46833,9972,8842,3854,27335,41593,26527,17133,24952,30007,40588,25507,29084,56334,46087,56390,2590,50637,28713,690,11694,17145,56228,26870,41781,54674,61818,56228,46527,33033,15249,41736,47401,8558,33780,47911,3819,46818,7221,63065,19314,59939,18161,56303,1118,39303,14341,47182,29364,28297,52375,54318,23272,20906,8111,23212,50780,58686,28542,15223,17217,6258,1537,63868,5016,63058,41464,38290,17329,39145,53185,6343,62456,10012,18056,21301,35024,29661,32836,14671,25513,38817,4047,33042,47259,59885,48205,2653,29840,25390,14329,18016,55167,20683,41450,51267,11127,13501,3635,29345,53578,35484,23870,55195,10059,16711,27256,14162,39307,54202,14645,29384,46925,57796,19080,62835,27620,2769,18576,13531,2058,25347,61967,14649,21148,51408,55191,65130,26692,60374,21880,65381,28442,64713,53441,45228,30197,43364,64604,54966,35201,60739,44482,44010,62058,54873,56140,65397,20519,594,40128,49075,57256,59774,2632,58967,46942,17768,41749,14614,62135,45620,18358,26517,56501,4909,39877,44677,44315,6264,59144,47503,7668,28244,63978,55195,11104,20644,57814,25640,14580,25420,28569,64781,20575,36368,56858,42987,56849,65013,6560,34635,42091,44016,18049,59958,3649,47106,46226,5092,49806,2184,11581,16024,31976,9848,2341,32035,23529,27309,35748,53761,9030,20271,21191,16073,12920,5274,44845,40594,2312,60841,37300,27966,53363,63801,26998,28348,15293,20583,12656,27710,49895,21432,38209,19252,63167,23722,2532,14716,58312,786,379,26629,18063,20402,25422,22781,16779,39095,45662,32972,53930,32521,21064,21958,40400,10364,12734,26663,47402,48509,59459,53950,64353,53298,27664,59989,35367,8552,33647,16164,52133,60858,23914,37618,54075,24468,17310,33776,59349,22636,10621,16010,53658,23669,29031,9995,38534,5234,63614,8710,29297,19072,26449,51659,12271,48378,52703,24439,57939,23330,35417,18666,21644,15932,14986,35310,61086,50293,51836,49533,49099,7636,60779,1061,39991,37664,21220,46817,8959,19101,17687,12133,40021,2420,27794,28632,46867,7227,55768,5989,58431,8933,10103,2865,19699,55062,64078,15949,21980,20433,22397,60524,54462,2450,33700,22633,22632,36156,25091,27522,19568,12525,19029,60695,28092,53314,38134,38019,42236,20702,38813,43903,37921,1567,54488,64288,47323,25610,34319,20058,65423,54025,9590,48900,1981,60758,38572,48224,25228,19907,36148,35075,9850,64671,62929,24465,60621,6497,10625,48355,1866,914,21893,47480,24386,46890,9363,1565,60102,784,36137,7871,8660,31884,65345,59059,26692,62537,19193,42172,13980,4466,7615,25147,22608,4271,32431,29650,63758,10389,26084,12720,34405,60643,34442,26214,34866,24210,6148,2937,5892,32746,32875,5850,62290,60672,42481,51385,10671,36399,11611,35553,30446,34893,5224,15214,62302,37037,30963,62197,20734,51325,5131,54740,47081,41076,12701,47627,17007,36170,31968,16597,37651,49091,5434,5631,27064,53869,60790,15380,19915,17331,44289,17460,8411,53751,39514,30115,24522,17503,40536,50894,53591,21162,29189,55917,40931,22317,25499,16887,27619,13762,25650,46827,52695,14098,41157,6353,14662,17383,26927,62514,43657,26114,847,28986,20432,47434,9506,41504,51502,27140,38616,47361,10102,4000,33087,48490,17270,43450,49439,50700,38500,61353,51997,45767,23468,51362,65025,19847,60492,62493,12765,53351,64681,26977,13101,44786,28652,29590,64959,57949,26849,48340,14499,19576,8818,21401,37429,29302,35983,15971,15676,21859,45693,62194,11845,14627,52041,44863,11067,7187,26709,10544,25756,63421,36605,61746,8300,29490,175,28927,10841,30749,45671,26501,60946,50617,54308,47394,28389,17984,16363,26265,45815,46840,25288,38750,32810,38216,40531,45832,49391,3057,57711,64734,64220,60795,20459,58285,38890,31412,204,695,13518,22257,6163,51577,38466,48893,22606,43961,15084,16372,56687,33869,65229,11786,53704,45433,54923,21368,7393,19429,3394,59161,17357,17145,40639,37894,24811,61530,29285,25339,57816,8929,30580,46050,15146,51374,35638,14071,38606,1854,17132,37312,10046,32429,26443,29939,57622,33262,4112,2617,7899,23397,6815,56329,25095,26216,55890,7596,31623,26493,11595,50336,20076,49011,44469,11384,45554,60272,10636,6652,62613,37080,16689,22440,10781,6910,59955,42997,23098,811,1164,7060,33796,14497,12396,41378,58265,11806,34907,11269,9685,30015,22527,64643,23949,22784,48583,59786,28288,21146,30693,20359,11317,2737,20256,62630,49059,20624,55085,8903,34354,32079,55264,6291,7221,47188,39434,7190,14845,60144,7616,46898,51988,11070,56276,55426,26894,44795,63997,57616,33098,35911,57148,7294,13223,17209,5440,32100,15591,26796,48532,39396,166,27216,52560,11767,12381,26924,35659,12106,38135,49101,28200,62755,57369,10354,33019,36415,38160,36616,4211,45333,56756,7481,55275,44372,26859,6081,8781,30529,46448,49144,22907,5258,41469,62687,61690,16435,64395,5029,37289,31020,20230,44004,33975,5312,6590,24446,11386,28944,30845,7696,31702,57182,39243,61527,60469,44420,32243,45976,24321,4103,8984,48577,26260,61657,54339,59785,7471,64638,1105,59693,43303,39766,15105,24605,4193,46126,63045,61411,24420,4914,56536,56497,18452,30541,8909,7839,22301,2832,58135,43013,32297,55540,10153,20558,31916,39538,35807,65279,10432,37444,21014,10365,41329,56559,17550,36360,12941,60736,13206,39166,60166,5010,23321,4240,10183,57723,11580,37727,4209,44393,17545,54084,24915,9014,44987,16042,7697,62948,35448,28403,39749,33076,60011,50625,42222,26577,51343,17413,30776,52320,27731,20259,10100,22951,30107,55803,31571,23664,48845,46984,52090,31695,31610,41907,59387,24792,11489,50611,11375,162,23026,7015,8692,52781,10067,21915,6828,26692,18261,2675,33618,23457,7521,47771,7618,48489,12176,42779,56559,57104,64061,43534,49886,26354,41589,33966,5236,8493,46899,17578,545,60986,36317,32023,59897,58419,28543,291,15914,47437,19048,56015,55715,32718,3127,18736,41676,15933,42315,46872,39534,33458,22562,60737,33714,9751,26814,50161,22514,46649,44683,10472,51377,52360,32475,65486,5736,29208,13196,44693,2911,5736,36394,15646,24371,7296,973,59377,19398,30152,64743,8108,21037,20756,46631,25023,20804,50678,21825,43755,61990,16441,64072,51660,20915,56545,61608,28921,23959,31169,47417,59528,14612,61676,45052,19464,28555,890,36039,3524,58245,2415,309,10140,38192,3016,53345,22306,44148,33710,11798,9853,39840,61908,37122,23722,35627,43622,39286,43644,43371,10946,31521,59241,18536,45895,53847,30824,37822,41609,40069,8510,57547,34846,31966,20239,53488,60849,43172,6925,3969,56353,24364,22641,50701,61336,43714,30824,28098,2038,55601,17379,39526,59144,28209,33721,26374,37596,5023,21608,59082,19437,26688,47041,64782,59613,33915,11401,25748,35249,30219,50448,8781,2886,47312,44200,3881,29719,46339,25677,43300,8287,56707,43493,49919,40168,42225,45752,38047,337,14495,51025,14121,10060,16353,11647,32641,17886,4234,23927,25034,4397,6448,23635,22272,35551,27453,27173,64651,43412,41210,44065,16780,61590,47208,46274,63262,37061,43380,61738,9668,43150,57519,12461,18550,61912,5458,31105,34969,23594,2242,12981,10655,20818,20769,14945,25352,56504,53291,28182,62110,55041,8689,64033,45420,29504,53265,53080,38474,31825,30296,3120,1211,23474,16762,57350,8975,13158,38239,54381,23716,56709,44402,1282,7850,36340,37430,40927,29549,22628,2461,52463,37649,9280,33982,35662,14285,57072,5035,35982,25244,32625,13800,49276,21947,51785,16035,17261,63699,8256,26040,60987,12948,29973,39578,59596,57966,11312,4023,9211,11619,37207,13407,63111,59561,999,22813,21973,28015,36687,55039,51340,20586,61245,4335,42933,53820,49,64686,42513,32120,31669,2764,39367,4507,6647,21886,34886,31987,62552,2975,59551,53141,48588,61021,29495,29112,13761,8414,2141,19314,17134,10285,11684,31129,44925,39238,57652,57220,7322,27870,58273,54697,53081,26703,48161,4955,46251,25276,16287,13839,2329,56716,34091,54678,65337,26840,24700,28288,48025,6978,39045,48617,13591,50952,2770,24634,422,49785,36689,19062,29309,54137,5317,33490,27280,58268,14496,30655,30360,18599,21274,7480,17400,59459,52887,10446,8904,18109,33619,7030,43907,61386,52895,31400,51009,57486,2336,17897,34375,17126,56802,21342,65209,63339,46761,22694,48822,1891,57083,32061,29614,22164,24838,14122,18751,14918,19998,64677,16936,22949,38275,22666,48655,13547,55719,11329,35591,36514,20985,47715,29756,22276]

    def __init__(self, edost_id, edost_pswd):
        self.edost_id = edost_id
        self.edost_pswd = edost_pswd

    def post(self, url, post):
        import httplib, urlparse
        parse_url = urlparse.urlparse(url)
        host = parse_url.hostname
        headers = {"Content-type": "application/x-www-form-urlencoded", "Accept": "text/plain"}
        conn = httplib.HTTPConnection(host)
        conn.request("POST", parse_url.path, post.encode('utf8'), headers)
        response = conn.getresponse()
        data = response.read()

        conn.close()
        return data

    #== Расчет стоимости доставки ====================================
    def calc(self, to_city, weight, strah = '', length = '', width = '', height = '', zipp='', payment_type = 1):
#        raise 'jopa'
        from string import Template

        if weight <= 0:
            return { 'qty_company' : 0, 'stat' : 11 }

        if not len(to_city):
            return { 'qty_company' : 0, 'stat' : 0 }

        #Проверяем, может передали код города
        if to_city.isdigit():
            to_city_id = int(to_city)
            if to_city_id < 1 or to_city_id > 2279:
                return { 'qty_company' : 0, 'stat' : 0} #Не показываем ошибку, но не считаем

        else:
            #Проверяем контрольную сумму города для расчета, если не совпадает, то даже не посылаем запрос на расчет
            crc = crc16(to_city.upper())
#            if crc in self.crcmas:
#                return { 'qty_company' : 0, 'stat' : 0} #Не показываем ошибку, но не считаем

        to_city = to_city.replace(' ', '%20')
        data = Template('to_city=$to_city&strah=$strah&id=$edost_id&p=$edost_pswd&weight=$weight&ln=$length&wd=$width&hg=$height&zip=$zipp')
        data = data.substitute(to_city = to_city,
                               strah = strah,
                               edost_id = self.edost_id,
                               edost_pswd = self.edost_pswd,
                               weight = weight,
                               length = length,
                               width = width,
                               height = height,
                               zipp = zipp)

        xml = self.post(self.addr, data)
        tree = etree.fromstring(xml)
        items = {}
        offices = {}
        for node in tree.xpath('//rsp/tarif'):
            item = {}
            for subnode in node:
                if subnode.text:
                    item[subnode.tag] = subnode.text
            item['offices'] = []

            if payment_type != 2:
                items[item['id']] = item
            else:
                try:
                    if float(item['pricecash']) > 0:
                        items[item['id']] = item
                except Exception, e:
                    pass


        for node in tree.xpath('//rsp/office'):
            office = {}
            for subnode in node:
                if subnode.text:
                    office[subnode.tag] = office.text
            for tarif_id in office['to_tarif'].split(','):
                if tarif_id in items:
                    items[tarif_id].append(office['id'])

            offices[office['id']] = office

        return { 'items' : items, 'offices' : offices }